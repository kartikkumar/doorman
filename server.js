// Generated by CoffeeScript 1.3.3
(function() {
  var Twilio, actions, app, checkDecisionPlugins, client, config, express,
    _this = this;

  express = require('express');

  Twilio = require('twilio');

  config = require('./config');

  client = new Twilio.RestClient('AC1ce0d8d7a79de22f4c27bed657e8e810', '20f65a9da68ec4630c9c43d19baef94e');

  app = express();

  app.use(express.bodyParser());

  app.get('/', function(request, response) {
    return response.send('Hello World');
  });

  app.post("/respondToVoiceCall", function(request, response) {
    console.log(request.body);
    if (Twilio.validateExpressRequest(request, '20f65a9da68ec4630c9c43d19baef94e')) {
      return checkDecisionPlugins(request, response);
    } else {
      return response.send("you are not twilio.  Buzz off.");
    }
  });

  checkDecisionPlugins = function(request, response) {
    var decisionPlugin, i, _i, _len, _ref;
    decisionPlugin = {};
    _ref = config.plugins.decisions;
    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
      decisionPlugin = _ref[i];
      decisionPlugin = decisionPlugin.run();
      if (decisionPlugin.outcome = true) {
        break;
      }
    }
    return actions(decisionPlugin, request, response);
  };

  actions = function(decision, request, response) {
    var actionPlugin, _i, _len, _ref, _results;
    response.type("text/xml");
    _ref = config.plugins.actions;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      actionPlugin = _ref[_i];
      if (decision.outcome === true && actionPlugin.runOnTrue === true) {
        _results.push(actionPlugin.run());
      } else if (decision.outcome === false && actionPlugin.runOnFalse === true) {
        _results.push(actionPlugin.run());
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  app.listen(process.env.PORT || 5000);

}).call(this);
