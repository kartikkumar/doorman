// Generated by CoffeeScript 1.3.3
(function() {
  var Plugin, alwaysTrue,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Plugin = require('../plugin');

  alwaysTrue = (function(_super) {

    __extends(alwaysTrue, _super);

    function alwaysTrue() {
      return alwaysTrue.__super__.constructor.apply(this, arguments);
    }

    alwaysTrue.prototype.runOnTrue = true;

    alwaysTrue.prototype.run = function(callSid, request, response) {
      var returnObj;
      console.log("alwaysTrue " + callSid);
      returnObj = {};
      returnObj.outcome = true;
      return returnObj;
    };

    return alwaysTrue;

  })(Plugin);

  module.exports = alwaysTrue;

}).call(this);
