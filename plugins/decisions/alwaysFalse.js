// Generated by CoffeeScript 1.3.3
(function() {
  var Plugin, alwaysFalse,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Plugin = require('../plugin');

  alwaysFalse = (function(_super) {

    __extends(alwaysFalse, _super);

    function alwaysFalse() {
      this.run = __bind(this.run, this);
      return alwaysFalse.__super__.constructor.apply(this, arguments);
    }

    alwaysFalse.prototype.runOnTrue = true;

    alwaysFalse.prototype.run = function(callSid, request, response) {
      console.log('always false called!');
      return false;
    };

    return alwaysFalse;

  })(Plugin);

  module.exports = alwaysFalse;

}).call(this);
